name: DABs Deployment

# Ensure that only a single job or workflow using the same concurrency group
# runs at a time.
concurrency: promotion

# Trigger this workflow whenever a pull request is opened against the repo's
# main branch or an existing pull request's head branch is updated.
on:
  pull_request:
  push:
    branches: main

jobs:
  ci:
    name: 'CI'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: .

      - name: Linting checks
        run: bash ./lint.sh

      - uses: databricks/setup-cli@main
      - run: databricks bundle validate   
        env:

          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PAT }}

  deploy-dev:
    name: 'Dev deployment'
    if: github.event_name != 'pull_request' 
    runs-on: ubuntu-latest
    env:
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PAT }}
      DATABRICKS_BUNDLE_ENV: dev
    steps:
      - uses: actions/checkout@v3
      - uses: databricks/setup-cli@main
      - run: databricks bundle deploy
      - run: databricks bundle run ddl


  # deploy-prod:
  #   needs: deploy-dev
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: databricks/setup-cli@main
  #     - run: databricks bundle validate
  #     - run: databricks bundle deploy

  #   environment: prod
  #   env:
  #     DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_PAT }}
  #     DATABRICKS_BUNDLE_ENV: prod
